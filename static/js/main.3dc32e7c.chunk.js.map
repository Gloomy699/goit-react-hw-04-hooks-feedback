{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOption/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/Section/Section.js","components/App.js","index.js","components/FeedbackOption/FeedbackOptions.module.css"],"names":["module","exports","FeedbackOptions","this","props","options","onLeaveFeedback","className","s","group_button","map","id","type","name","button","onClick","Component","defaultProps","Statistics","good","neutral","bad","total","positivePercentage","statistics","Notification","message","Section","title","useState","state","setState","countTotalFeedback","parseInt","prevState","parseFloat","toFixed","countPositiveFeedbackPercentage","App","ReactDOM","render","document","querySelector"],"mappings":"4IACAA,EAAOC,QAAU,CAAC,WAAa,iC,8TCGVC,E,uKAQR,IAAD,EACiCC,KAAKC,MAAlCC,EADJ,EACIA,QAASC,EADb,EACaA,gBACjB,OACI,qBAAKC,UAAWC,IAAEC,aAAlB,SACKJ,EAAQK,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,KAAZ,OACT,wBACID,KAAK,SACLL,UAAWC,IAAEM,OAEbC,QAAS,kBAAMT,EAAgBM,IAJnC,SAI2CC,GADlCF,Y,GAhBgBK,aAAxBd,EACVe,aAAe,CAClBZ,QAAQ,I,qBCDKa,E,uKAkBR,IAAD,EACoDf,KAAKC,MAAtDe,EADH,EACGA,KAAMC,EADT,EACSA,QAASC,EADlB,EACkBA,IAAKC,EADvB,EACuBA,MAAOC,EAD9B,EAC8BA,mBAClC,OACI,8BACI,qBAAIhB,UAAWC,IAAEgB,WAAjB,UACI,+BAAI,wCAAJ,KAAwBL,KACxB,+BAAI,2CAAJ,KAA2BC,KAC3B,+BAAI,uCAAJ,KAAuBC,KACvB,+BAAI,yCAAJ,KAAyBC,KACzB,+BAAI,qDAAJ,KAAqCC,EAArC,gB,GA3BoBP,aCFzB,SAASS,EAAT,GAAiC,IAAVC,EAAS,EAATA,QAClC,OACI,6BAAKA,IDAQR,EAEVD,aAAe,CAClBE,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAM,EACNC,mBAAmB,GCH3BE,EAAaR,aAAe,CACxBS,QAAS,qB,YCCE,SAASC,EAAT,GAAyC,IAAD,IAAtBC,aAAsB,MAAhB,eAAgB,IAEzBC,mBAAS,CAC/BV,KAAM,EACNC,QAAS,EACTC,IAAK,IAL0C,mBAE5CS,EAF4C,KAErCC,EAFqC,KAY7CC,EAAqB,WAAO,IACvBb,EAAsBW,EAAtBX,KAAMC,EAAgBU,EAAhBV,QAASC,EAAOS,EAAPT,IACtB,OAAOY,SAASd,EAAOC,EAAUC,IAerC,OACI,qCACI,6BAAKO,IACL,cAAC,EAAD,CAAiBvB,QAASA,EAASC,gBAxBnB,SAACM,GACrBmB,GAAS,SAAAG,GAAS,kCAASA,GAAT,kBAAqBtB,EAAMkB,EAAMlB,GAAM,UAwBrD,uBAEA,4CACkB,IAAfkB,EAAMX,MAAgC,IAAlBW,EAAMV,SAA+B,IAAdU,EAAMT,IAChD,cAAC,EAAD,CAAYF,KAAMW,EAAMX,KAAMC,QAASU,EAAMV,QAASC,IAAKS,EAAMT,IAAKC,MAAOU,IAAsBT,mBApBvE,WAEpC,IAAMD,EAAQU,IACNb,EAASW,EAATX,KAKR,OAAOgB,YAHiB,IAAMb,EACOH,GAERiB,QAAQ,IAY0FC,KACvH,cAACZ,EAAD,CAAcG,MAAM,yB,MC9CrB,SAASU,IACtB,OACD,qBAAK/B,UAAU,gBAAf,SACM,cAACoB,EAAD,CAASC,MAAM,4BCDtBW,IAASC,OAAO,cAAC,EAAD,IAAaC,SAASC,cAAc,W,kBCJpD1C,EAAOC,QAAU,CAAC,aAAe,sCAAsC,OAAS,mC","file":"static/js/main.3dc32e7c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2QFok\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nexport default class FeedbackOptions extends Component {\n    static defaultProps = {\n        options:[]\n    }\n    static propTypes = {\n        options: PropTypes.array.isRequired\n    }\n\n    render(){\n        const { options, onLeaveFeedback } = this.props;\n        return(\n            <div className={s.group_button}>\n                {options.map(({id, type, name}) => (\n                    <button\n                        type=\"button\"\n                        className={s.button}\n                        key={id}\n                        onClick={() => onLeaveFeedback(type)}>{name}\n                    </button>\n                ))}\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from'./Statistics.module.css';\n\nexport default class Statistics extends Component {\n\n    static defaultProps = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n        total:0,\n        positivePercentage:0\n    }\n\n    static propTypes = {\n        good: PropTypes.number.isRequired,\n        neutral:  PropTypes.number.isRequired,\n        bad: PropTypes.number.isRequired,\n        total: PropTypes.number.isRequired,\n        positivePercentage: PropTypes.number.isRequired\n    }\n\n    render(){\n        const {good, neutral, bad, total, positivePercentage} = this.props;\n        return(\n            <div>\n                <ul className={s.statistics}>\n                    <li><span>Good</span>: {good}</li>\n                    <li><span>Neutral</span>: {neutral}</li>\n                    <li><span>bad</span>: {bad}</li>\n                    <li><span>Total</span>: {total}</li>\n                    <li><span>Positive feedback</span>: {positivePercentage}%</li>\n                </ul>\n            </div>\n        );\n    }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Notification({message}){\n    return(\n        <h3>{message}</h3>\n    );\n}\n\nNotification.defaultProps = {\n    message: \"No feedback given\"\n}\n\nNotification.propTypes = {\n    message:PropTypes.string\n}","\nimport React, { useState } from 'react';\n\nimport FeedbackOptions from '../../components/FeedbackOption/FeedbackOptions';\nimport Statistics from '../../components/Statistics/Statistics';\nimport Notification from '../../components/Notification/Notification';\n\n\n\nimport options from './../../json/options.json';\n\nexport default function Section({title=\"Section Name\"}){\n\n    const [state, setState] = useState({\n        good: 0,\n        neutral: 0,\n        bad: 0,\n    })\n\n    const onLeaveFeedback = (type) => {\n        setState(prevState => ({...prevState, [type]:state[type]+1})) \n    }\n\n    const countTotalFeedback = () => {\n        const {good, neutral, bad} = state;\n        return parseInt(good + neutral + bad);\n    }\n\n    const countPositiveFeedbackPercentage = () => {\n\n        const total = countTotalFeedback();\n        const { good } = state;\n    \n        const totslPercentage = 100 / total;\n        const percentage = totslPercentage * good;\n\n        return parseFloat(percentage.toFixed(0));\n    }\n\n\n    return(\n        <> \n            <h2>{title}</h2>\n            <FeedbackOptions options={options} onLeaveFeedback={onLeaveFeedback} />\n            <br/>\n\n            <h2>Statistics</h2>\n            { (state.good !== 0 || state.neutral !== 0 || state.bad !== 0) ? \n                <Statistics good={state.good} neutral={state.neutral} bad={state.bad} total={countTotalFeedback()} positivePercentage={countPositiveFeedbackPercentage()} /> :\n                <Notification title=\"No feedback given\" />\n                    \n            }\n        </>\n    );\n}","import Section from './Section/Section';\nimport './App.css'\n\nexport default function App() {\n  return (\n <div className=\"mainContainer\">\n       <Section title=\"Please leave feedback\" />\n </div>\n   \n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(<App></App>, document.querySelector('#root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"group_button\":\"FeedbackOptions_group_button__1HV45\",\"button\":\"FeedbackOptions_button__25BLN\"};"],"sourceRoot":""}